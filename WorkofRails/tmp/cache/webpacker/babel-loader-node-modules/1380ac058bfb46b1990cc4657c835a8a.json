{"ast":null,"code":"function handleVueDestruction(vue) {\n  var turbolinksEvent = vue.$options.turbolinksDestroyEvent || 'turbolinks:visit';\n  document.addEventListener(turbolinksEvent, function teardown() {\n    vue.$destroy();\n    document.removeEventListener(turbolinksEvent, teardown);\n  });\n}\n\nvar turbolinksAdapterMixin = {\n  beforeMount: function beforeMount() {\n    // If this is the root component, we want to cache the original element contents to replace later\n    // We don't care about sub-components, just the root\n    if (this === this.$root && this.$el) {\n      handleVueDestruction(this); // cache original element\n\n      this.$turbolinksCachedHTML = this.$el.outerHTML; // register root hook to restore original element on destroy\n\n      this.$once('hook:destroyed', function () {\n        this.$el.outerHTML = this.$turbolinksCachedHTML;\n      });\n    }\n  }\n};\n\nfunction plugin(Vue, options) {\n  // Install a global mixin\n  Vue.mixin(turbolinksAdapterMixin);\n}\n\nexport { turbolinksAdapterMixin };\nexport default plugin;","map":null,"metadata":{},"sourceType":"module"}